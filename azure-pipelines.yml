trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  SONAR_PROJECT_KEY: 'check-test'
  SONAR_HOST_URL: 'https://asisupgradeapi.changepond.com:8443'
  SonarToken: 'sqa_b3ebec73aeb1b903680ebd1a7e958c0e15c188a0'

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'Install dependencies'

- task: SonarQubePrepare@5
  env:
    NODE_TLS_REJECT_UNAUTHORIZED: '0'  # Use this only if you're dealing with a self-signed cert
  inputs:
    SonarQube: 'Sonarqube'  # Configure this service connection in ADO
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(SONAR_PROJECT_KEY)'
    cliProjectName: 'check-test'
    cliSources: '.'
    extraProperties: |
      sonar.host.url=$(SONAR_HOST_URL)
      sonar.login=$(SonarToken)  # Pass from secret variable
      sonar.javascript.lcov.reportPaths=coverage/lcov.info
      sonar.exclusions=node_modules/**,**/*.test.js

- script: |
    npm run build
    npm run test -- --coverage
  displayName: 'Build & Test with Coverage'

- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Results'
